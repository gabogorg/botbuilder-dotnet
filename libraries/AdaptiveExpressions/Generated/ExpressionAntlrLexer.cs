//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.8
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from ExpressionAntlrLexer.g4 by ANTLR 4.8

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

#pragma warning disable 3021
using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.8")]
[System.CLSCompliant(false)]
public partial class ExpressionAntlrLexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		STRING_INTERPOLATION_START=1, PLUS=2, SUBSTRACT=3, NON=4, XOR=5, ASTERISK=6, 
		SLASH=7, PERCENT=8, DOUBLE_EQUAL=9, NOT_EQUAL=10, SINGLE_AND=11, DOUBLE_AND=12, 
		DOUBLE_VERTICAL_CYLINDER=13, LESS_THAN=14, MORE_THAN=15, LESS_OR_EQUAl=16, 
		MORE_OR_EQUAL=17, OPEN_BRACKET=18, CLOSE_BRACKET=19, DOT=20, OPEN_SQUARE_BRACKET=21, 
		CLOSE_SQUARE_BRACKET=22, OPEN_CURLY_BRACKET=23, CLOSE_CURLY_BRACKET=24, 
		COMMA=25, COLON=26, ARROW=27, NULL_COALESCE=28, QUESTION_MARK=29, NUMBER=30, 
		WHITESPACE=31, IDENTIFIER=32, NEWLINE=33, STRING=34, INVALID_TOKEN_DEFAULT_MODE=35, 
		TEMPLATE=36, ESCAPE_CHARACTER=37, TEXT_CONTENT=38;
	public const int
		STRING_INTERPOLATION_MODE=1;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE", "STRING_INTERPOLATION_MODE"
	};

	public static readonly string[] ruleNames = {
		"LETTER", "DIGIT", "OBJECT_DEFINITION", "STRING_INTERPOLATION_START", 
		"PLUS", "SUBSTRACT", "NON", "XOR", "ASTERISK", "SLASH", "PERCENT", "DOUBLE_EQUAL", 
		"NOT_EQUAL", "SINGLE_AND", "DOUBLE_AND", "DOUBLE_VERTICAL_CYLINDER", "LESS_THAN", 
		"MORE_THAN", "LESS_OR_EQUAl", "MORE_OR_EQUAL", "OPEN_BRACKET", "CLOSE_BRACKET", 
		"DOT", "OPEN_SQUARE_BRACKET", "CLOSE_SQUARE_BRACKET", "OPEN_CURLY_BRACKET", 
		"CLOSE_CURLY_BRACKET", "COMMA", "COLON", "ARROW", "NULL_COALESCE", "QUESTION_MARK", 
		"NUMBER", "WHITESPACE", "IDENTIFIER", "NEWLINE", "STRING", "INVALID_TOKEN_DEFAULT_MODE", 
		"STRING_INTERPOLATION_END", "TEMPLATE", "ESCAPE_CHARACTER", "TEXT_CONTENT"
	};


	  bool ignoreWS = true;      // usually we ignore whitespace, but inside stringInterpolation, whitespace is significant


	public ExpressionAntlrLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public ExpressionAntlrLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, null, "'+'", "'-'", "'!'", "'^'", "'*'", "'/'", "'%'", "'=='", null, 
		"'&'", "'&&'", "'||'", "'<'", "'>'", "'<='", "'>='", "'('", "')'", "'.'", 
		"'['", "']'", "'{'", "'}'", "','", "':'", "'=>'", "'??'", "'?'"
	};
	private static readonly string[] _SymbolicNames = {
		null, "STRING_INTERPOLATION_START", "PLUS", "SUBSTRACT", "NON", "XOR", 
		"ASTERISK", "SLASH", "PERCENT", "DOUBLE_EQUAL", "NOT_EQUAL", "SINGLE_AND", 
		"DOUBLE_AND", "DOUBLE_VERTICAL_CYLINDER", "LESS_THAN", "MORE_THAN", "LESS_OR_EQUAl", 
		"MORE_OR_EQUAL", "OPEN_BRACKET", "CLOSE_BRACKET", "DOT", "OPEN_SQUARE_BRACKET", 
		"CLOSE_SQUARE_BRACKET", "OPEN_CURLY_BRACKET", "CLOSE_CURLY_BRACKET", "COMMA", 
		"COLON", "ARROW", "NULL_COALESCE", "QUESTION_MARK", "NUMBER", "WHITESPACE", 
		"IDENTIFIER", "NEWLINE", "STRING", "INVALID_TOKEN_DEFAULT_MODE", "TEMPLATE", 
		"ESCAPE_CHARACTER", "TEXT_CONTENT"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "ExpressionAntlrLexer.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return new string(_serializedATN); } }

	static ExpressionAntlrLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	public override void Action(RuleContext _localctx, int ruleIndex, int actionIndex) {
		switch (ruleIndex) {
		case 3 : STRING_INTERPOLATION_START_action(_localctx, actionIndex); break;
		case 38 : STRING_INTERPOLATION_END_action(_localctx, actionIndex); break;
		}
	}
	private void STRING_INTERPOLATION_START_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 0:  ignoreWS = false; break;
		}
	}
	private void STRING_INTERPOLATION_END_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 1: ignoreWS = true; break;
		}
	}
	public override bool Sempred(RuleContext _localctx, int ruleIndex, int predIndex) {
		switch (ruleIndex) {
		case 33 : return WHITESPACE_sempred(_localctx, predIndex);
		}
		return true;
	}
	private bool WHITESPACE_sempred(RuleContext _localctx, int predIndex) {
		switch (predIndex) {
		case 0: return ignoreWS;
		}
		return true;
	}

	private static char[] _serializedATN = {
		'\x3', '\x608B', '\xA72A', '\x8133', '\xB9ED', '\x417C', '\x3BE7', '\x7786', 
		'\x5964', '\x2', '(', '\x110', '\b', '\x1', '\b', '\x1', '\x4', '\x2', 
		'\t', '\x2', '\x4', '\x3', '\t', '\x3', '\x4', '\x4', '\t', '\x4', '\x4', 
		'\x5', '\t', '\x5', '\x4', '\x6', '\t', '\x6', '\x4', '\a', '\t', '\a', 
		'\x4', '\b', '\t', '\b', '\x4', '\t', '\t', '\t', '\x4', '\n', '\t', '\n', 
		'\x4', '\v', '\t', '\v', '\x4', '\f', '\t', '\f', '\x4', '\r', '\t', '\r', 
		'\x4', '\xE', '\t', '\xE', '\x4', '\xF', '\t', '\xF', '\x4', '\x10', '\t', 
		'\x10', '\x4', '\x11', '\t', '\x11', '\x4', '\x12', '\t', '\x12', '\x4', 
		'\x13', '\t', '\x13', '\x4', '\x14', '\t', '\x14', '\x4', '\x15', '\t', 
		'\x15', '\x4', '\x16', '\t', '\x16', '\x4', '\x17', '\t', '\x17', '\x4', 
		'\x18', '\t', '\x18', '\x4', '\x19', '\t', '\x19', '\x4', '\x1A', '\t', 
		'\x1A', '\x4', '\x1B', '\t', '\x1B', '\x4', '\x1C', '\t', '\x1C', '\x4', 
		'\x1D', '\t', '\x1D', '\x4', '\x1E', '\t', '\x1E', '\x4', '\x1F', '\t', 
		'\x1F', '\x4', ' ', '\t', ' ', '\x4', '!', '\t', '!', '\x4', '\"', '\t', 
		'\"', '\x4', '#', '\t', '#', '\x4', '$', '\t', '$', '\x4', '%', '\t', 
		'%', '\x4', '&', '\t', '&', '\x4', '\'', '\t', '\'', '\x4', '(', '\t', 
		'(', '\x4', ')', '\t', ')', '\x4', '*', '\t', '*', '\x4', '+', '\t', '+', 
		'\x3', '\x2', '\x3', '\x2', '\x3', '\x3', '\x3', '\x3', '\x3', '\x4', 
		'\x3', '\x4', '\x3', '\x4', '\x3', '\x4', '\x5', '\x4', '\x61', '\n', 
		'\x4', '\x3', '\x4', '\x3', '\x4', '\x3', '\x4', '\x3', '\x4', '\x6', 
		'\x4', 'g', '\n', '\x4', '\r', '\x4', '\xE', '\x4', 'h', '\a', '\x4', 
		'k', '\n', '\x4', '\f', '\x4', '\xE', '\x4', 'n', '\v', '\x4', '\x3', 
		'\x4', '\x3', '\x4', '\x3', '\x5', '\x3', '\x5', '\x3', '\x5', '\x3', 
		'\x5', '\x3', '\x5', '\x3', '\x6', '\x3', '\x6', '\x3', '\a', '\x3', '\a', 
		'\x3', '\b', '\x3', '\b', '\x3', '\t', '\x3', '\t', '\x3', '\n', '\x3', 
		'\n', '\x3', '\v', '\x3', '\v', '\x3', '\f', '\x3', '\f', '\x3', '\r', 
		'\x3', '\r', '\x3', '\r', '\x3', '\xE', '\x3', '\xE', '\x3', '\xE', '\x3', 
		'\xE', '\x5', '\xE', '\x8C', '\n', '\xE', '\x3', '\xF', '\x3', '\xF', 
		'\x3', '\x10', '\x3', '\x10', '\x3', '\x10', '\x3', '\x11', '\x3', '\x11', 
		'\x3', '\x11', '\x3', '\x12', '\x3', '\x12', '\x3', '\x13', '\x3', '\x13', 
		'\x3', '\x14', '\x3', '\x14', '\x3', '\x14', '\x3', '\x15', '\x3', '\x15', 
		'\x3', '\x15', '\x3', '\x16', '\x3', '\x16', '\x3', '\x17', '\x3', '\x17', 
		'\x3', '\x18', '\x3', '\x18', '\x3', '\x19', '\x3', '\x19', '\x3', '\x1A', 
		'\x3', '\x1A', '\x3', '\x1B', '\x3', '\x1B', '\x3', '\x1C', '\x3', '\x1C', 
		'\x3', '\x1D', '\x3', '\x1D', '\x3', '\x1E', '\x3', '\x1E', '\x3', '\x1F', 
		'\x3', '\x1F', '\x3', '\x1F', '\x3', ' ', '\x3', ' ', '\x3', ' ', '\x3', 
		'!', '\x3', '!', '\x3', '\"', '\x6', '\"', '\xBB', '\n', '\"', '\r', '\"', 
		'\xE', '\"', '\xBC', '\x3', '\"', '\x3', '\"', '\x6', '\"', '\xC1', '\n', 
		'\"', '\r', '\"', '\xE', '\"', '\xC2', '\x5', '\"', '\xC5', '\n', '\"', 
		'\x3', '#', '\x3', '#', '\x3', '#', '\x3', '#', '\x3', '#', '\x3', '$', 
		'\x3', '$', '\x3', '$', '\x3', '$', '\x3', '$', '\x5', '$', '\xD1', '\n', 
		'$', '\x3', '$', '\x3', '$', '\x3', '$', '\a', '$', '\xD6', '\n', '$', 
		'\f', '$', '\xE', '$', '\xD9', '\v', '$', '\x3', '%', '\x5', '%', '\xDC', 
		'\n', '%', '\x3', '%', '\x3', '%', '\x3', '%', '\x3', '%', '\x3', '&', 
		'\x3', '&', '\x3', '&', '\x3', '&', '\a', '&', '\xE6', '\n', '&', '\f', 
		'&', '\xE', '&', '\xE9', '\v', '&', '\x3', '&', '\x3', '&', '\x3', '&', 
		'\x3', '&', '\x3', '&', '\a', '&', '\xF0', '\n', '&', '\f', '&', '\xE', 
		'&', '\xF3', '\v', '&', '\x3', '&', '\x5', '&', '\xF6', '\n', '&', '\x3', 
		'\'', '\x3', '\'', '\x3', '(', '\x3', '(', '\x3', '(', '\x3', '(', '\x3', 
		'(', '\x3', '(', '\x3', ')', '\x3', ')', '\x3', ')', '\x3', ')', '\x3', 
		')', '\x6', ')', '\x105', '\n', ')', '\r', ')', '\xE', ')', '\x106', '\x3', 
		')', '\x3', ')', '\x3', '*', '\x3', '*', '\x5', '*', '\x10D', '\n', '*', 
		'\x3', '+', '\x3', '+', '\x4', '\xE7', '\xF1', '\x2', ',', '\x4', '\x2', 
		'\x6', '\x2', '\b', '\x2', '\n', '\x3', '\f', '\x4', '\xE', '\x5', '\x10', 
		'\x6', '\x12', '\a', '\x14', '\b', '\x16', '\t', '\x18', '\n', '\x1A', 
		'\v', '\x1C', '\f', '\x1E', '\r', ' ', '\xE', '\"', '\xF', '$', '\x10', 
		'&', '\x11', '(', '\x12', '*', '\x13', ',', '\x14', '.', '\x15', '\x30', 
		'\x16', '\x32', '\x17', '\x34', '\x18', '\x36', '\x19', '\x38', '\x1A', 
		':', '\x1B', '<', '\x1C', '>', '\x1D', '@', '\x1E', '\x42', '\x1F', '\x44', 
		' ', '\x46', '!', 'H', '\"', 'J', '#', 'L', '$', 'N', '%', 'P', '\x2', 
		'R', '&', 'T', '\'', 'V', '(', '\x4', '\x2', '\x3', '\f', '\x4', '\x2', 
		'\x43', '\\', '\x63', '|', '\x3', '\x2', '\x32', ';', '\t', '\x2', '\f', 
		'\f', '\xF', '\xF', '$', '$', ')', ')', '\x62', '\x62', '}', '}', '\x7F', 
		'\x7F', '\x6', '\x2', '\v', '\v', '\"', '\"', '\xA2', '\xA2', '\xFF01', 
		'\xFF01', '\x5', '\x2', '%', '%', '\x42', '\x42', '\x61', '\x61', '\x4', 
		'\x2', ')', ')', '^', '^', '\x3', '\x2', ')', ')', '\x4', '\x2', '$', 
		'$', '^', '^', '\x3', '\x2', '$', '$', '\x4', '\x2', '\f', '\f', '\xF', 
		'\xF', '\x2', '\x125', '\x2', '\n', '\x3', '\x2', '\x2', '\x2', '\x2', 
		'\f', '\x3', '\x2', '\x2', '\x2', '\x2', '\xE', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '\x10', '\x3', '\x2', '\x2', '\x2', '\x2', '\x12', '\x3', '\x2', 
		'\x2', '\x2', '\x2', '\x14', '\x3', '\x2', '\x2', '\x2', '\x2', '\x16', 
		'\x3', '\x2', '\x2', '\x2', '\x2', '\x18', '\x3', '\x2', '\x2', '\x2', 
		'\x2', '\x1A', '\x3', '\x2', '\x2', '\x2', '\x2', '\x1C', '\x3', '\x2', 
		'\x2', '\x2', '\x2', '\x1E', '\x3', '\x2', '\x2', '\x2', '\x2', ' ', '\x3', 
		'\x2', '\x2', '\x2', '\x2', '\"', '\x3', '\x2', '\x2', '\x2', '\x2', '$', 
		'\x3', '\x2', '\x2', '\x2', '\x2', '&', '\x3', '\x2', '\x2', '\x2', '\x2', 
		'(', '\x3', '\x2', '\x2', '\x2', '\x2', '*', '\x3', '\x2', '\x2', '\x2', 
		'\x2', ',', '\x3', '\x2', '\x2', '\x2', '\x2', '.', '\x3', '\x2', '\x2', 
		'\x2', '\x2', '\x30', '\x3', '\x2', '\x2', '\x2', '\x2', '\x32', '\x3', 
		'\x2', '\x2', '\x2', '\x2', '\x34', '\x3', '\x2', '\x2', '\x2', '\x2', 
		'\x36', '\x3', '\x2', '\x2', '\x2', '\x2', '\x38', '\x3', '\x2', '\x2', 
		'\x2', '\x2', ':', '\x3', '\x2', '\x2', '\x2', '\x2', '<', '\x3', '\x2', 
		'\x2', '\x2', '\x2', '>', '\x3', '\x2', '\x2', '\x2', '\x2', '@', '\x3', 
		'\x2', '\x2', '\x2', '\x2', '\x42', '\x3', '\x2', '\x2', '\x2', '\x2', 
		'\x44', '\x3', '\x2', '\x2', '\x2', '\x2', '\x46', '\x3', '\x2', '\x2', 
		'\x2', '\x2', 'H', '\x3', '\x2', '\x2', '\x2', '\x2', 'J', '\x3', '\x2', 
		'\x2', '\x2', '\x2', 'L', '\x3', '\x2', '\x2', '\x2', '\x2', 'N', '\x3', 
		'\x2', '\x2', '\x2', '\x3', 'P', '\x3', '\x2', '\x2', '\x2', '\x3', 'R', 
		'\x3', '\x2', '\x2', '\x2', '\x3', 'T', '\x3', '\x2', '\x2', '\x2', '\x3', 
		'V', '\x3', '\x2', '\x2', '\x2', '\x4', 'X', '\x3', '\x2', '\x2', '\x2', 
		'\x6', 'Z', '\x3', '\x2', '\x2', '\x2', '\b', '\\', '\x3', '\x2', '\x2', 
		'\x2', '\n', 'q', '\x3', '\x2', '\x2', '\x2', '\f', 'v', '\x3', '\x2', 
		'\x2', '\x2', '\xE', 'x', '\x3', '\x2', '\x2', '\x2', '\x10', 'z', '\x3', 
		'\x2', '\x2', '\x2', '\x12', '|', '\x3', '\x2', '\x2', '\x2', '\x14', 
		'~', '\x3', '\x2', '\x2', '\x2', '\x16', '\x80', '\x3', '\x2', '\x2', 
		'\x2', '\x18', '\x82', '\x3', '\x2', '\x2', '\x2', '\x1A', '\x84', '\x3', 
		'\x2', '\x2', '\x2', '\x1C', '\x8B', '\x3', '\x2', '\x2', '\x2', '\x1E', 
		'\x8D', '\x3', '\x2', '\x2', '\x2', ' ', '\x8F', '\x3', '\x2', '\x2', 
		'\x2', '\"', '\x92', '\x3', '\x2', '\x2', '\x2', '$', '\x95', '\x3', '\x2', 
		'\x2', '\x2', '&', '\x97', '\x3', '\x2', '\x2', '\x2', '(', '\x99', '\x3', 
		'\x2', '\x2', '\x2', '*', '\x9C', '\x3', '\x2', '\x2', '\x2', ',', '\x9F', 
		'\x3', '\x2', '\x2', '\x2', '.', '\xA1', '\x3', '\x2', '\x2', '\x2', '\x30', 
		'\xA3', '\x3', '\x2', '\x2', '\x2', '\x32', '\xA5', '\x3', '\x2', '\x2', 
		'\x2', '\x34', '\xA7', '\x3', '\x2', '\x2', '\x2', '\x36', '\xA9', '\x3', 
		'\x2', '\x2', '\x2', '\x38', '\xAB', '\x3', '\x2', '\x2', '\x2', ':', 
		'\xAD', '\x3', '\x2', '\x2', '\x2', '<', '\xAF', '\x3', '\x2', '\x2', 
		'\x2', '>', '\xB1', '\x3', '\x2', '\x2', '\x2', '@', '\xB4', '\x3', '\x2', 
		'\x2', '\x2', '\x42', '\xB7', '\x3', '\x2', '\x2', '\x2', '\x44', '\xBA', 
		'\x3', '\x2', '\x2', '\x2', '\x46', '\xC6', '\x3', '\x2', '\x2', '\x2', 
		'H', '\xD0', '\x3', '\x2', '\x2', '\x2', 'J', '\xDB', '\x3', '\x2', '\x2', 
		'\x2', 'L', '\xF5', '\x3', '\x2', '\x2', '\x2', 'N', '\xF7', '\x3', '\x2', 
		'\x2', '\x2', 'P', '\xF9', '\x3', '\x2', '\x2', '\x2', 'R', '\xFF', '\x3', 
		'\x2', '\x2', '\x2', 'T', '\x10A', '\x3', '\x2', '\x2', '\x2', 'V', '\x10E', 
		'\x3', '\x2', '\x2', '\x2', 'X', 'Y', '\t', '\x2', '\x2', '\x2', 'Y', 
		'\x5', '\x3', '\x2', '\x2', '\x2', 'Z', '[', '\t', '\x3', '\x2', '\x2', 
		'[', '\a', '\x3', '\x2', '\x2', '\x2', '\\', 'l', '\a', '}', '\x2', '\x2', 
		']', 'k', '\x5', '\x46', '#', '\x2', '^', '\x61', '\x5', 'H', '$', '\x2', 
		'_', '\x61', '\x5', 'L', '&', '\x2', '`', '^', '\x3', '\x2', '\x2', '\x2', 
		'`', '_', '\x3', '\x2', '\x2', '\x2', '\x61', '\x62', '\x3', '\x2', '\x2', 
		'\x2', '\x62', '\x66', '\a', '<', '\x2', '\x2', '\x63', 'g', '\x5', 'L', 
		'&', '\x2', '\x64', 'g', '\n', '\x4', '\x2', '\x2', '\x65', 'g', '\x5', 
		'\b', '\x4', '\x2', '\x66', '\x63', '\x3', '\x2', '\x2', '\x2', '\x66', 
		'\x64', '\x3', '\x2', '\x2', '\x2', '\x66', '\x65', '\x3', '\x2', '\x2', 
		'\x2', 'g', 'h', '\x3', '\x2', '\x2', '\x2', 'h', '\x66', '\x3', '\x2', 
		'\x2', '\x2', 'h', 'i', '\x3', '\x2', '\x2', '\x2', 'i', 'k', '\x3', '\x2', 
		'\x2', '\x2', 'j', ']', '\x3', '\x2', '\x2', '\x2', 'j', '`', '\x3', '\x2', 
		'\x2', '\x2', 'k', 'n', '\x3', '\x2', '\x2', '\x2', 'l', 'j', '\x3', '\x2', 
		'\x2', '\x2', 'l', 'm', '\x3', '\x2', '\x2', '\x2', 'm', 'o', '\x3', '\x2', 
		'\x2', '\x2', 'n', 'l', '\x3', '\x2', '\x2', '\x2', 'o', 'p', '\a', '\x7F', 
		'\x2', '\x2', 'p', '\t', '\x3', '\x2', '\x2', '\x2', 'q', 'r', '\a', '\x62', 
		'\x2', '\x2', 'r', 's', '\b', '\x5', '\x2', '\x2', 's', 't', '\x3', '\x2', 
		'\x2', '\x2', 't', 'u', '\b', '\x5', '\x3', '\x2', 'u', '\v', '\x3', '\x2', 
		'\x2', '\x2', 'v', 'w', '\a', '-', '\x2', '\x2', 'w', '\r', '\x3', '\x2', 
		'\x2', '\x2', 'x', 'y', '\a', '/', '\x2', '\x2', 'y', '\xF', '\x3', '\x2', 
		'\x2', '\x2', 'z', '{', '\a', '#', '\x2', '\x2', '{', '\x11', '\x3', '\x2', 
		'\x2', '\x2', '|', '}', '\a', '`', '\x2', '\x2', '}', '\x13', '\x3', '\x2', 
		'\x2', '\x2', '~', '\x7F', '\a', ',', '\x2', '\x2', '\x7F', '\x15', '\x3', 
		'\x2', '\x2', '\x2', '\x80', '\x81', '\a', '\x31', '\x2', '\x2', '\x81', 
		'\x17', '\x3', '\x2', '\x2', '\x2', '\x82', '\x83', '\a', '\'', '\x2', 
		'\x2', '\x83', '\x19', '\x3', '\x2', '\x2', '\x2', '\x84', '\x85', '\a', 
		'?', '\x2', '\x2', '\x85', '\x86', '\a', '?', '\x2', '\x2', '\x86', '\x1B', 
		'\x3', '\x2', '\x2', '\x2', '\x87', '\x88', '\a', '#', '\x2', '\x2', '\x88', 
		'\x8C', '\a', '?', '\x2', '\x2', '\x89', '\x8A', '\a', '>', '\x2', '\x2', 
		'\x8A', '\x8C', '\a', '@', '\x2', '\x2', '\x8B', '\x87', '\x3', '\x2', 
		'\x2', '\x2', '\x8B', '\x89', '\x3', '\x2', '\x2', '\x2', '\x8C', '\x1D', 
		'\x3', '\x2', '\x2', '\x2', '\x8D', '\x8E', '\a', '(', '\x2', '\x2', '\x8E', 
		'\x1F', '\x3', '\x2', '\x2', '\x2', '\x8F', '\x90', '\a', '(', '\x2', 
		'\x2', '\x90', '\x91', '\a', '(', '\x2', '\x2', '\x91', '!', '\x3', '\x2', 
		'\x2', '\x2', '\x92', '\x93', '\a', '~', '\x2', '\x2', '\x93', '\x94', 
		'\a', '~', '\x2', '\x2', '\x94', '#', '\x3', '\x2', '\x2', '\x2', '\x95', 
		'\x96', '\a', '>', '\x2', '\x2', '\x96', '%', '\x3', '\x2', '\x2', '\x2', 
		'\x97', '\x98', '\a', '@', '\x2', '\x2', '\x98', '\'', '\x3', '\x2', '\x2', 
		'\x2', '\x99', '\x9A', '\a', '>', '\x2', '\x2', '\x9A', '\x9B', '\a', 
		'?', '\x2', '\x2', '\x9B', ')', '\x3', '\x2', '\x2', '\x2', '\x9C', '\x9D', 
		'\a', '@', '\x2', '\x2', '\x9D', '\x9E', '\a', '?', '\x2', '\x2', '\x9E', 
		'+', '\x3', '\x2', '\x2', '\x2', '\x9F', '\xA0', '\a', '*', '\x2', '\x2', 
		'\xA0', '-', '\x3', '\x2', '\x2', '\x2', '\xA1', '\xA2', '\a', '+', '\x2', 
		'\x2', '\xA2', '/', '\x3', '\x2', '\x2', '\x2', '\xA3', '\xA4', '\a', 
		'\x30', '\x2', '\x2', '\xA4', '\x31', '\x3', '\x2', '\x2', '\x2', '\xA5', 
		'\xA6', '\a', ']', '\x2', '\x2', '\xA6', '\x33', '\x3', '\x2', '\x2', 
		'\x2', '\xA7', '\xA8', '\a', '_', '\x2', '\x2', '\xA8', '\x35', '\x3', 
		'\x2', '\x2', '\x2', '\xA9', '\xAA', '\a', '}', '\x2', '\x2', '\xAA', 
		'\x37', '\x3', '\x2', '\x2', '\x2', '\xAB', '\xAC', '\a', '\x7F', '\x2', 
		'\x2', '\xAC', '\x39', '\x3', '\x2', '\x2', '\x2', '\xAD', '\xAE', '\a', 
		'.', '\x2', '\x2', '\xAE', ';', '\x3', '\x2', '\x2', '\x2', '\xAF', '\xB0', 
		'\a', '<', '\x2', '\x2', '\xB0', '=', '\x3', '\x2', '\x2', '\x2', '\xB1', 
		'\xB2', '\a', '?', '\x2', '\x2', '\xB2', '\xB3', '\a', '@', '\x2', '\x2', 
		'\xB3', '?', '\x3', '\x2', '\x2', '\x2', '\xB4', '\xB5', '\a', '\x41', 
		'\x2', '\x2', '\xB5', '\xB6', '\a', '\x41', '\x2', '\x2', '\xB6', '\x41', 
		'\x3', '\x2', '\x2', '\x2', '\xB7', '\xB8', '\a', '\x41', '\x2', '\x2', 
		'\xB8', '\x43', '\x3', '\x2', '\x2', '\x2', '\xB9', '\xBB', '\x5', '\x6', 
		'\x3', '\x2', '\xBA', '\xB9', '\x3', '\x2', '\x2', '\x2', '\xBB', '\xBC', 
		'\x3', '\x2', '\x2', '\x2', '\xBC', '\xBA', '\x3', '\x2', '\x2', '\x2', 
		'\xBC', '\xBD', '\x3', '\x2', '\x2', '\x2', '\xBD', '\xC4', '\x3', '\x2', 
		'\x2', '\x2', '\xBE', '\xC0', '\a', '\x30', '\x2', '\x2', '\xBF', '\xC1', 
		'\x5', '\x6', '\x3', '\x2', '\xC0', '\xBF', '\x3', '\x2', '\x2', '\x2', 
		'\xC1', '\xC2', '\x3', '\x2', '\x2', '\x2', '\xC2', '\xC0', '\x3', '\x2', 
		'\x2', '\x2', '\xC2', '\xC3', '\x3', '\x2', '\x2', '\x2', '\xC3', '\xC5', 
		'\x3', '\x2', '\x2', '\x2', '\xC4', '\xBE', '\x3', '\x2', '\x2', '\x2', 
		'\xC4', '\xC5', '\x3', '\x2', '\x2', '\x2', '\xC5', '\x45', '\x3', '\x2', 
		'\x2', '\x2', '\xC6', '\xC7', '\t', '\x5', '\x2', '\x2', '\xC7', '\xC8', 
		'\x6', '#', '\x2', '\x2', '\xC8', '\xC9', '\x3', '\x2', '\x2', '\x2', 
		'\xC9', '\xCA', '\b', '#', '\x4', '\x2', '\xCA', 'G', '\x3', '\x2', '\x2', 
		'\x2', '\xCB', '\xD1', '\x5', '\x4', '\x2', '\x2', '\xCC', '\xD1', '\t', 
		'\x6', '\x2', '\x2', '\xCD', '\xCE', '\a', '\x42', '\x2', '\x2', '\xCE', 
		'\xD1', '\a', '\x42', '\x2', '\x2', '\xCF', '\xD1', '\x4', '&', '\'', 
		'\x2', '\xD0', '\xCB', '\x3', '\x2', '\x2', '\x2', '\xD0', '\xCC', '\x3', 
		'\x2', '\x2', '\x2', '\xD0', '\xCD', '\x3', '\x2', '\x2', '\x2', '\xD0', 
		'\xCF', '\x3', '\x2', '\x2', '\x2', '\xD1', '\xD7', '\x3', '\x2', '\x2', 
		'\x2', '\xD2', '\xD6', '\x5', '\x4', '\x2', '\x2', '\xD3', '\xD6', '\x5', 
		'\x6', '\x3', '\x2', '\xD4', '\xD6', '\a', '\x61', '\x2', '\x2', '\xD5', 
		'\xD2', '\x3', '\x2', '\x2', '\x2', '\xD5', '\xD3', '\x3', '\x2', '\x2', 
		'\x2', '\xD5', '\xD4', '\x3', '\x2', '\x2', '\x2', '\xD6', '\xD9', '\x3', 
		'\x2', '\x2', '\x2', '\xD7', '\xD5', '\x3', '\x2', '\x2', '\x2', '\xD7', 
		'\xD8', '\x3', '\x2', '\x2', '\x2', '\xD8', 'I', '\x3', '\x2', '\x2', 
		'\x2', '\xD9', '\xD7', '\x3', '\x2', '\x2', '\x2', '\xDA', '\xDC', '\a', 
		'\xF', '\x2', '\x2', '\xDB', '\xDA', '\x3', '\x2', '\x2', '\x2', '\xDB', 
		'\xDC', '\x3', '\x2', '\x2', '\x2', '\xDC', '\xDD', '\x3', '\x2', '\x2', 
		'\x2', '\xDD', '\xDE', '\a', '\f', '\x2', '\x2', '\xDE', '\xDF', '\x3', 
		'\x2', '\x2', '\x2', '\xDF', '\xE0', '\b', '%', '\x4', '\x2', '\xE0', 
		'K', '\x3', '\x2', '\x2', '\x2', '\xE1', '\xE7', '\a', ')', '\x2', '\x2', 
		'\xE2', '\xE3', '\a', '^', '\x2', '\x2', '\xE3', '\xE6', '\t', '\a', '\x2', 
		'\x2', '\xE4', '\xE6', '\n', '\b', '\x2', '\x2', '\xE5', '\xE2', '\x3', 
		'\x2', '\x2', '\x2', '\xE5', '\xE4', '\x3', '\x2', '\x2', '\x2', '\xE6', 
		'\xE9', '\x3', '\x2', '\x2', '\x2', '\xE7', '\xE8', '\x3', '\x2', '\x2', 
		'\x2', '\xE7', '\xE5', '\x3', '\x2', '\x2', '\x2', '\xE8', '\xEA', '\x3', 
		'\x2', '\x2', '\x2', '\xE9', '\xE7', '\x3', '\x2', '\x2', '\x2', '\xEA', 
		'\xF6', '\a', ')', '\x2', '\x2', '\xEB', '\xF1', '\a', '$', '\x2', '\x2', 
		'\xEC', '\xED', '\a', '^', '\x2', '\x2', '\xED', '\xF0', '\t', '\t', '\x2', 
		'\x2', '\xEE', '\xF0', '\n', '\n', '\x2', '\x2', '\xEF', '\xEC', '\x3', 
		'\x2', '\x2', '\x2', '\xEF', '\xEE', '\x3', '\x2', '\x2', '\x2', '\xF0', 
		'\xF3', '\x3', '\x2', '\x2', '\x2', '\xF1', '\xF2', '\x3', '\x2', '\x2', 
		'\x2', '\xF1', '\xEF', '\x3', '\x2', '\x2', '\x2', '\xF2', '\xF4', '\x3', 
		'\x2', '\x2', '\x2', '\xF3', '\xF1', '\x3', '\x2', '\x2', '\x2', '\xF4', 
		'\xF6', '\a', '$', '\x2', '\x2', '\xF5', '\xE1', '\x3', '\x2', '\x2', 
		'\x2', '\xF5', '\xEB', '\x3', '\x2', '\x2', '\x2', '\xF6', 'M', '\x3', 
		'\x2', '\x2', '\x2', '\xF7', '\xF8', '\v', '\x2', '\x2', '\x2', '\xF8', 
		'O', '\x3', '\x2', '\x2', '\x2', '\xF9', '\xFA', '\a', '\x62', '\x2', 
		'\x2', '\xFA', '\xFB', '\b', '(', '\x5', '\x2', '\xFB', '\xFC', '\x3', 
		'\x2', '\x2', '\x2', '\xFC', '\xFD', '\b', '(', '\x6', '\x2', '\xFD', 
		'\xFE', '\b', '(', '\a', '\x2', '\xFE', 'Q', '\x3', '\x2', '\x2', '\x2', 
		'\xFF', '\x100', '\a', '&', '\x2', '\x2', '\x100', '\x104', '\a', '}', 
		'\x2', '\x2', '\x101', '\x105', '\x5', 'L', '&', '\x2', '\x102', '\x105', 
		'\x5', '\b', '\x4', '\x2', '\x103', '\x105', '\n', '\x4', '\x2', '\x2', 
		'\x104', '\x101', '\x3', '\x2', '\x2', '\x2', '\x104', '\x102', '\x3', 
		'\x2', '\x2', '\x2', '\x104', '\x103', '\x3', '\x2', '\x2', '\x2', '\x105', 
		'\x106', '\x3', '\x2', '\x2', '\x2', '\x106', '\x104', '\x3', '\x2', '\x2', 
		'\x2', '\x106', '\x107', '\x3', '\x2', '\x2', '\x2', '\x107', '\x108', 
		'\x3', '\x2', '\x2', '\x2', '\x108', '\x109', '\a', '\x7F', '\x2', '\x2', 
		'\x109', 'S', '\x3', '\x2', '\x2', '\x2', '\x10A', '\x10C', '\a', '^', 
		'\x2', '\x2', '\x10B', '\x10D', '\n', '\v', '\x2', '\x2', '\x10C', '\x10B', 
		'\x3', '\x2', '\x2', '\x2', '\x10C', '\x10D', '\x3', '\x2', '\x2', '\x2', 
		'\x10D', 'U', '\x3', '\x2', '\x2', '\x2', '\x10E', '\x10F', '\v', '\x2', 
		'\x2', '\x2', '\x10F', 'W', '\x3', '\x2', '\x2', '\x2', '\x19', '\x2', 
		'\x3', '`', '\x66', 'h', 'j', 'l', '\x8B', '\xBC', '\xC2', '\xC4', '\xD0', 
		'\xD5', '\xD7', '\xDB', '\xE5', '\xE7', '\xEF', '\xF1', '\xF5', '\x104', 
		'\x106', '\x10C', '\b', '\x3', '\x5', '\x2', '\a', '\x3', '\x2', '\b', 
		'\x2', '\x2', '\x3', '(', '\x3', '\t', '\x3', '\x2', '\x6', '\x2', '\x2',
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
